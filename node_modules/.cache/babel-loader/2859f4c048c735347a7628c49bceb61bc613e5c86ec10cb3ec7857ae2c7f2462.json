{"ast":null,"code":"import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nvar scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n  var _a;\n  var _useContext = useContext(MotionContext),\n    parent = _useContext.visualElement;\n  var lazyContext = useContext(LazyContext);\n  var presenceContext = useContext(PresenceContext);\n  var reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n  var visualElementRef = useRef();\n  /**\n   * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n   */\n  createVisualElement = createVisualElement || lazyContext.renderer;\n  if (!visualElementRef.current && createVisualElement) {\n    visualElementRef.current = createVisualElement(Component, {\n      visualState: visualState,\n      parent: parent,\n      props: props,\n      presenceContext: presenceContext,\n      blockInitialAnimation: presenceContext ? presenceContext.initial === false : false,\n      reducedMotionConfig: reducedMotionConfig\n    });\n  }\n  var visualElement = visualElementRef.current;\n  /**\n   * Load Motion gesture and animation features. These are rendered as renderless\n   * components so each feature can optionally make use of React lifecycle methods.\n   */\n  var initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n  if (visualElement && !visualElement.projection && ProjectionNodeConstructor && (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n    createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n  }\n  useInsertionEffect(function () {\n    visualElement && visualElement.update(props, presenceContext);\n  });\n  /**\n   * Cache this value as we want to know whether HandoffAppearAnimations\n   * was present on initial render - it will be deleted after this.\n   */\n  var optimisedAppearId = props[optimizedAppearDataAttribute];\n  var wantsHandoff = useRef(Boolean(optimisedAppearId) && !window.MotionHandoffIsComplete && ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n  useIsomorphicLayoutEffect(function () {\n    if (!visualElement) return;\n    visualElement.updateFeatures();\n    microtask.render(visualElement.render);\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    if (wantsHandoff.current && visualElement.animationState) {\n      visualElement.animationState.animateChanges();\n    }\n  });\n  useEffect(function () {\n    if (!visualElement) return;\n    if (!wantsHandoff.current && visualElement.animationState) {\n      visualElement.animationState.animateChanges();\n    }\n    wantsHandoff.current = false;\n    // This ensures all future calls to animateChanges() will run in useEffect\n    if (!scheduleHandoffComplete) {\n      scheduleHandoffComplete = true;\n      queueMicrotask(completeHandoff);\n    }\n  });\n  return visualElement;\n}\nfunction completeHandoff() {\n  window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n  var layoutId = props.layoutId,\n    layout = props.layout,\n    drag = props.drag,\n    dragConstraints = props.dragConstraints,\n    layoutScroll = props.layoutScroll,\n    layoutRoot = props.layoutRoot;\n  visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"] ? undefined : getClosestProjectingNode(visualElement.parent));\n  visualElement.projection.setOptions({\n    layoutId: layoutId,\n    layout: layout,\n    alwaysMeasureLayout: Boolean(drag) || dragConstraints && isRefObject(dragConstraints),\n    visualElement: visualElement,\n    /**\n     * TODO: Update options in an effect. This could be tricky as it'll be too late\n     * to update by the time layout animations run.\n     * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n     * ensuring it gets called if there's no potential layout animations.\n     *\n     */\n    animationType: typeof layout === \"string\" ? layout : \"both\",\n    initialPromotionConfig: initialPromotionConfig,\n    layoutScroll: layoutScroll,\n    layoutRoot: layoutRoot\n  });\n}\nfunction getClosestProjectingNode(visualElement) {\n  if (!visualElement) return undefined;\n  return visualElement.options.allowProjection !== false ? visualElement.projection : getClosestProjectingNode(visualElement.parent);\n}\nexport { useVisualElement };","map":{"version":3,"names":["useContext","useRef","useInsertionEffect","useEffect","PresenceContext","MotionContext","useIsomorphicLayoutEffect","LazyContext","MotionConfigContext","optimizedAppearDataAttribute","microtask","isRefObject","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","_a","_useContext","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","reducedMotion","visualElementRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","createProjectionNode","update","optimisedAppearId","wantsHandoff","Boolean","window","MotionHandoffIsComplete","MotionHasOptimisedAnimation","call","updateFeatures","render","animationState","animateChanges","queueMicrotask","completeHandoff","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","undefined","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","options","allowProjection"],"sources":["/Users/Ksquare/Documents/Software/home/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs"],"sourcesContent":["import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete &&\n        ((_a = window.MotionHasOptimisedAnimation) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        wantsHandoff.current = false;\n        // This ensures all future calls to animateChanges() will run in useEffect\n        if (!scheduleHandoffComplete) {\n            scheduleHandoffComplete = true;\n            queueMicrotask(completeHandoff);\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.MotionHandoffIsComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}