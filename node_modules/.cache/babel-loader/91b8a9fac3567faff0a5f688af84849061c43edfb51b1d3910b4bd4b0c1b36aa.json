{"ast":null,"code":"var checkStringStartsWith = function checkStringStartsWith(token) {\n  return function (key) {\n    return typeof key === \"string\" && key.startsWith(token);\n  };\n};\nvar isCSSVariableName = checkStringStartsWith(\"--\");\nvar startsAsVariableToken = checkStringStartsWith(\"var(--\");\nvar isCSSVariableToken = function isCSSVariableToken(value) {\n  var startsWithToken = startsAsVariableToken(value);\n  if (!startsWithToken) return false;\n  // Ensure any comments are stripped from the value as this can harm performance of the regex.\n  return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nvar singleCssVariableRegex = /var\\(\\x2D\\x2D(?:[\\x2D0-9A-Z_a-z\\u017F\\u212A]+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*|[\\x2D0-9A-Z_a-z\\u017F\\u212A]+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*,(?:[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*(?:(?![\\t-\\r \\(\\)\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uD800-\\uDFFF\\uFEFF])[\\s\\S]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*\\((?:(?:(?![\\(\\)\\uD800-\\uDFFF])[\\s\\S]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])|\\((?:(?![\\(\\)\\uD800-\\uDFFF])[\\s\\S]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])*\\))*\\))+[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*)\\)$/i;\nexport { isCSSVariableName, isCSSVariableToken };","map":{"version":3,"names":["checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","value","startsWithToken","singleCssVariableRegex","test","split","trim"],"sources":["/Users/Ksquare/Documents/Software/home/node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs"],"sourcesContent":["const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n"],"mappings":"AAAA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,KAAK;EAAA,OAAK,UAACC,GAAG;IAAA,OAAK,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACC,UAAU,CAACF,KAAK,CAAC;EAAA;AAAA;AAClG,IAAMG,iBAAiB,GAAGJ,qBAAqB,CAAC,IAAI,CAAC;AACrD,IAAMK,qBAAqB,GAAGL,qBAAqB,CAAC,QAAQ,CAAC;AAC7D,IAAMM,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,KAAK,EAAK;EAClC,IAAMC,eAAe,GAAGH,qBAAqB,CAACE,KAAK,CAAC;EACpD,IAAI,CAACC,eAAe,EAChB,OAAO,KAAK;EAChB;EACA,OAAOC,sBAAsB,CAACC,IAAI,CAACH,KAAK,CAACI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;AACnE,CAAC;AACD,IAAMH,sBAAsB,GAAG,6rBAAqF;AAEpH,SAASL,iBAAiB,EAAEE,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}