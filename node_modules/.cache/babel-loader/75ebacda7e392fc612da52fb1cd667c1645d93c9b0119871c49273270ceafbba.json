{"ast":null,"code":"import _objectWithoutProperties from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _excluded = [\"willChange\"];\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\nvar propEventHandlers = [\"AnimationStart\", \"AnimationComplete\", \"Update\", \"BeforeLayoutMeasure\", \"LayoutMeasure\", \"LayoutAnimationStart\", \"LayoutAnimationComplete\"];\nvar numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nvar VisualElement = /*#__PURE__*/function () {\n  function VisualElement(_ref) {\n    var _this = this;\n    var parent = _ref.parent,\n      props = _ref.props,\n      presenceContext = _ref.presenceContext,\n      reducedMotionConfig = _ref.reducedMotionConfig,\n      blockInitialAnimation = _ref.blockInitialAnimation,\n      visualState = _ref.visualState;\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, VisualElement);\n    /**\n     * If true, will-change will be applied to the element. Only HTMLVisualElements\n     * currently support this.\n     */\n    this.applyWillChange = false;\n    /**\n     * A reference to the current underlying Instance, e.g. a HTMLElement\n     * or Three.Mesh etc.\n     */\n    this.current = null;\n    /**\n     * A set containing references to this VisualElement's children.\n     */\n    this.children = new Set();\n    /**\n     * Determine what role this visual element should take in the variant tree.\n     */\n    this.isVariantNode = false;\n    this.isControllingVariants = false;\n    /**\n     * Decides whether this VisualElement should animate in reduced motion\n     * mode.\n     *\n     * TODO: This is currently set on every individual VisualElement but feels\n     * like it could be set globally.\n     */\n    this.shouldReduceMotion = null;\n    /**\n     * A map of all motion values attached to this visual element. Motion\n     * values are source of truth for any given animated value. A motion\n     * value might be provided externally by the component via props.\n     */\n    this.values = new Map();\n    this.KeyframeResolver = KeyframeResolver;\n    /**\n     * Cleanup functions for active features (hover/tap/exit etc)\n     */\n    this.features = {};\n    /**\n     * A map of every subscription that binds the provided or generated\n     * motion values onChange listeners to this visual element.\n     */\n    this.valueSubscriptions = new Map();\n    /**\n     * A reference to the previously-provided motion values as returned\n     * from scrapeMotionValuesFromProps. We use the keys in here to determine\n     * if any motion values need to be removed after props are updated.\n     */\n    this.prevMotionValues = {};\n    /**\n     * An object containing a SubscriptionManager for each active event.\n     */\n    this.events = {};\n    /**\n     * An object containing an unsubscribe function for each prop event subscription.\n     * For example, every \"Update\" event can have multiple subscribers via\n     * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n     */\n    this.propEventSubscriptions = {};\n    this.notifyUpdate = function () {\n      return _this.notify(\"Update\", _this.latestValues);\n    };\n    this.render = function () {\n      _this.isRenderScheduled = false;\n      if (!_this.current) return;\n      _this.triggerBuild();\n      _this.renderInstance(_this.current, _this.renderState, _this.props.style, _this.projection);\n    };\n    this.isRenderScheduled = false;\n    this.scheduleRender = function () {\n      if (!_this.isRenderScheduled) {\n        _this.isRenderScheduled = true;\n        frame.render(_this.render, false, true);\n      }\n    };\n    var latestValues = visualState.latestValues,\n      renderState = visualState.renderState;\n    this.latestValues = latestValues;\n    this.baseTarget = _objectSpread({}, latestValues);\n    this.initialValues = props.initial ? _objectSpread({}, latestValues) : {};\n    this.renderState = renderState;\n    this.parent = parent;\n    this.props = props;\n    this.presenceContext = presenceContext;\n    this.depth = parent ? parent.depth + 1 : 0;\n    this.reducedMotionConfig = reducedMotionConfig;\n    this.options = options;\n    this.blockInitialAnimation = Boolean(blockInitialAnimation);\n    this.isControllingVariants = isControllingVariants(props);\n    this.isVariantNode = isVariantNode(props);\n    if (this.isVariantNode) {\n      this.variantChildren = new Set();\n    }\n    this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n    /**\n     * Any motion values that are provided to the element when created\n     * aren't yet bound to the element, as this would technically be impure.\n     * However, we iterate through the motion values and set them to the\n     * initial values for this component.\n     *\n     * TODO: This is impure and we should look at changing this to run on mount.\n     * Doing so will break some tests but this isn't necessarily a breaking change,\n     * more a reflection of the test.\n     */\n    var _this$scrapeMotionVal = this.scrapeMotionValuesFromProps(props, {}, this),\n      willChange = _this$scrapeMotionVal.willChange,\n      initialMotionValues = _objectWithoutProperties(_this$scrapeMotionVal, _excluded);\n    for (var key in initialMotionValues) {\n      var value = initialMotionValues[key];\n      if (latestValues[key] !== undefined && isMotionValue(value)) {\n        value.set(latestValues[key], false);\n      }\n    }\n  }\n  _createClass(VisualElement, [{\n    key: \"scrapeMotionValuesFromProps\",\n    value:\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    function scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n      return {};\n    }\n  }, {\n    key: \"mount\",\n    value: function mount(instance) {\n      var _this2 = this;\n      this.current = instance;\n      visualElementStore.set(instance, this);\n      if (this.projection && !this.projection.instance) {\n        this.projection.mount(instance);\n      }\n      if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n        this.removeFromVariantTree = this.parent.addVariantChild(this);\n      }\n      this.values.forEach(function (value, key) {\n        return _this2.bindToMotionValue(key, value);\n      });\n      if (!hasReducedMotionListener.current) {\n        initPrefersReducedMotion();\n      }\n      this.shouldReduceMotion = this.reducedMotionConfig === \"never\" ? false : this.reducedMotionConfig === \"always\" ? true : prefersReducedMotion.current;\n      if (process.env.NODE_ENV !== \"production\") {\n        warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n      }\n      if (this.parent) this.parent.children.add(this);\n      this.update(this.props, this.presenceContext);\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      visualElementStore.delete(this.current);\n      this.projection && this.projection.unmount();\n      cancelFrame(this.notifyUpdate);\n      cancelFrame(this.render);\n      this.valueSubscriptions.forEach(function (remove) {\n        return remove();\n      });\n      this.valueSubscriptions.clear();\n      this.removeFromVariantTree && this.removeFromVariantTree();\n      this.parent && this.parent.children.delete(this);\n      for (var key in this.events) {\n        this.events[key].clear();\n      }\n      for (var _key in this.features) {\n        var feature = this.features[_key];\n        if (feature) {\n          feature.unmount();\n          feature.isMounted = false;\n        }\n      }\n      this.current = null;\n    }\n  }, {\n    key: \"bindToMotionValue\",\n    value: function bindToMotionValue(key, value) {\n      var _this3 = this;\n      if (this.valueSubscriptions.has(key)) {\n        this.valueSubscriptions.get(key)();\n      }\n      var valueIsTransform = transformProps.has(key);\n      var removeOnChange = value.on(\"change\", function (latestValue) {\n        _this3.latestValues[key] = latestValue;\n        _this3.props.onUpdate && frame.preRender(_this3.notifyUpdate);\n        if (valueIsTransform && _this3.projection) {\n          _this3.projection.isTransformDirty = true;\n        }\n      });\n      var removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n      var removeSyncCheck;\n      if (window.MotionCheckAppearSync) {\n        removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n      }\n      this.valueSubscriptions.set(key, function () {\n        removeOnChange();\n        removeOnRenderRequest();\n        if (removeSyncCheck) removeSyncCheck();\n        if (value.owner) value.stop();\n      });\n    }\n  }, {\n    key: \"sortNodePosition\",\n    value: function sortNodePosition(other) {\n      /**\n       * If these nodes aren't even of the same type we can't compare their depth.\n       */\n      if (!this.current || !this.sortInstanceNodePosition || this.type !== other.type) {\n        return 0;\n      }\n      return this.sortInstanceNodePosition(this.current, other.current);\n    }\n  }, {\n    key: \"updateFeatures\",\n    value: function updateFeatures() {\n      var key = \"animation\";\n      for (key in featureDefinitions) {\n        var featureDefinition = featureDefinitions[key];\n        if (!featureDefinition) continue;\n        var isEnabled = featureDefinition.isEnabled,\n          FeatureConstructor = featureDefinition.Feature;\n        /**\n         * If this feature is enabled but not active, make a new instance.\n         */\n        if (!this.features[key] && FeatureConstructor && isEnabled(this.props)) {\n          this.features[key] = new FeatureConstructor(this);\n        }\n        /**\n         * If we have a feature, mount or update it.\n         */\n        if (this.features[key]) {\n          var feature = this.features[key];\n          if (feature.isMounted) {\n            feature.update();\n          } else {\n            feature.mount();\n            feature.isMounted = true;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"triggerBuild\",\n    value: function triggerBuild() {\n      this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n  }, {\n    key: \"measureViewportBox\",\n    value: function measureViewportBox() {\n      return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox();\n    }\n  }, {\n    key: \"getStaticValue\",\n    value: function getStaticValue(key) {\n      return this.latestValues[key];\n    }\n  }, {\n    key: \"setStaticValue\",\n    value: function setStaticValue(key, value) {\n      this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n  }, {\n    key: \"update\",\n    value: function update(props, presenceContext) {\n      if (props.transformTemplate || this.props.transformTemplate) {\n        this.scheduleRender();\n      }\n      this.prevProps = this.props;\n      this.props = props;\n      this.prevPresenceContext = this.presenceContext;\n      this.presenceContext = presenceContext;\n      /**\n       * Update prop event handlers ie onAnimationStart, onAnimationComplete\n       */\n      for (var i = 0; i < propEventHandlers.length; i++) {\n        var key = propEventHandlers[i];\n        if (this.propEventSubscriptions[key]) {\n          this.propEventSubscriptions[key]();\n          delete this.propEventSubscriptions[key];\n        }\n        var listenerName = \"on\" + key;\n        var listener = props[listenerName];\n        if (listener) {\n          this.propEventSubscriptions[key] = this.on(key, listener);\n        }\n      }\n      this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n      if (this.handleChildMotionValue) {\n        this.handleChildMotionValue();\n      }\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps() {\n      return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n  }, {\n    key: \"getVariant\",\n    value: function getVariant(name) {\n      return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n  }, {\n    key: \"getDefaultTransition\",\n    value: function getDefaultTransition() {\n      return this.props.transition;\n    }\n  }, {\n    key: \"getTransformPagePoint\",\n    value: function getTransformPagePoint() {\n      return this.props.transformPagePoint;\n    }\n  }, {\n    key: \"getClosestVariantNode\",\n    value: function getClosestVariantNode() {\n      return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : undefined;\n    }\n  }, {\n    key: \"getVariantContext\",\n    value: function getVariantContext() {\n      var startAtParent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (startAtParent) {\n        return this.parent ? this.parent.getVariantContext() : undefined;\n      }\n      if (!this.isControllingVariants) {\n        var _context = this.parent ? this.parent.getVariantContext() || {} : {};\n        if (this.props.initial !== undefined) {\n          _context.initial = this.props.initial;\n        }\n        return _context;\n      }\n      var context = {};\n      for (var i = 0; i < numVariantProps; i++) {\n        var name = variantProps[i];\n        var prop = this.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n          context[name] = prop;\n        }\n      }\n      return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n  }, {\n    key: \"addVariantChild\",\n    value: function addVariantChild(child) {\n      var closestVariantNode = this.getClosestVariantNode();\n      if (closestVariantNode) {\n        closestVariantNode.variantChildren && closestVariantNode.variantChildren.add(child);\n        return function () {\n          return closestVariantNode.variantChildren.delete(child);\n        };\n      }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n  }, {\n    key: \"addValue\",\n    value: function addValue(key, value) {\n      // Remove existing value if it exists\n      var existingValue = this.values.get(key);\n      if (value !== existingValue) {\n        if (existingValue) this.removeValue(key);\n        this.bindToMotionValue(key, value);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n      }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n  }, {\n    key: \"removeValue\",\n    value: function removeValue(key) {\n      this.values.delete(key);\n      var unsubscribe = this.valueSubscriptions.get(key);\n      if (unsubscribe) {\n        unsubscribe();\n        this.valueSubscriptions.delete(key);\n      }\n      delete this.latestValues[key];\n      this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n  }, {\n    key: \"hasValue\",\n    value: function hasValue(key) {\n      return this.values.has(key);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(key, defaultValue) {\n      if (this.props.values && this.props.values[key]) {\n        return this.props.values[key];\n      }\n      var value = this.values.get(key);\n      if (value === undefined && defaultValue !== undefined) {\n        value = motionValue(defaultValue === null ? undefined : defaultValue, {\n          owner: this\n        });\n        this.addValue(key, value);\n      }\n      return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n  }, {\n    key: \"readValue\",\n    value: function readValue(key, target) {\n      var _a;\n      var value = this.latestValues[key] !== undefined || !this.current ? this.latestValues[key] : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n      if (value !== undefined && value !== null) {\n        if (typeof value === \"string\" && (isNumericalString(value) || isZeroValueString(value))) {\n          // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n          value = parseFloat(value);\n        } else if (!findValueType(value) && complex.test(target)) {\n          value = getAnimatableNone(key, target);\n        }\n        this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n      }\n      return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n  }, {\n    key: \"setBaseTarget\",\n    value: function setBaseTarget(key, value) {\n      this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n  }, {\n    key: \"getBaseTarget\",\n    value: function getBaseTarget(key) {\n      var _a;\n      var initial = this.props.initial;\n      var valueFromInitial;\n      if (typeof initial === \"string\" || typeof initial === \"object\") {\n        var variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n        if (variant) {\n          valueFromInitial = variant[key];\n        }\n      }\n      /**\n       * If this value still exists in the current initial variant, read that.\n       */\n      if (initial && valueFromInitial !== undefined) {\n        return valueFromInitial;\n      }\n      /**\n       * Alternatively, if this VisualElement config has defined a getBaseTarget\n       * so we can read the value from an alternative source, try that.\n       */\n      var target = this.getBaseTargetFromProps(this.props, key);\n      if (target !== undefined && !isMotionValue(target)) return target;\n      /**\n       * If the value was initially defined on initial, but it doesn't any more,\n       * return undefined. Otherwise return the value as initially read from the DOM.\n       */\n      return this.initialValues[key] !== undefined && valueFromInitial === undefined ? undefined : this.baseTarget[key];\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (!this.events[eventName]) {\n        this.events[eventName] = new SubscriptionManager();\n      }\n      return this.events[eventName].add(callback);\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(eventName) {\n      if (this.events[eventName]) {\n        var _this$events$eventNam;\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key2 = 1; _key2 < _len; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        (_this$events$eventNam = this.events[eventName]).notify.apply(_this$events$eventNam, args);\n      }\n    }\n  }]);\n  return VisualElement;\n}();\nexport { VisualElement };","map":{"version":3,"names":["initPrefersReducedMotion","hasReducedMotionListener","prefersReducedMotion","SubscriptionManager","motionValue","isMotionValue","transformProps","isControllingVariants","isVariantNode","isVariantLabel","updateMotionValuesFromProps","resolveVariantFromProps","warnOnce","featureDefinitions","variantProps","visualElementStore","KeyframeResolver","isNumericalString","isZeroValueString","findValueType","complex","getAnimatableNone","createBox","frame","cancelFrame","propEventHandlers","numVariantProps","length","VisualElement","_ref","_this","parent","props","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","options","arguments","undefined","_classCallCheck","applyWillChange","current","children","Set","shouldReduceMotion","values","Map","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","latestValues","render","isRenderScheduled","triggerBuild","renderInstance","renderState","style","projection","scheduleRender","baseTarget","_objectSpread","initialValues","initial","depth","Boolean","variantChildren","manuallyAnimateOnMount","_this$scrapeMotionVal","scrapeMotionValuesFromProps","willChange","initialMotionValues","_objectWithoutProperties","_excluded","key","value","set","_createClass","_props","_prevProps","_visualElement","mount","instance","_this2","removeFromVariantTree","addVariantChild","forEach","bindToMotionValue","process","env","NODE_ENV","add","update","unmount","delete","remove","clear","feature","isMounted","_this3","has","get","valueIsTransform","removeOnChange","on","latestValue","onUpdate","preRender","isTransformDirty","removeOnRenderRequest","removeSyncCheck","window","MotionCheckAppearSync","owner","stop","sortNodePosition","other","sortInstanceNodePosition","type","updateFeatures","featureDefinition","isEnabled","FeatureConstructor","Feature","build","measureViewportBox","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","i","listenerName","listener","handleChildMotionValue","getProps","getVariant","name","variants","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","getVariantContext","startAtParent","context","prop","child","closestVariantNode","addValue","existingValue","removeValue","unsubscribe","removeValueFromRenderState","hasValue","getValue","defaultValue","readValue","target","_a","getBaseTargetFromProps","readValueFromInstance","parseFloat","test","setBaseTarget","getBaseTarget","valueFromInitial","variant","custom","eventName","callback","_this$events$eventNam","_len","args","Array","_key2","apply"],"sources":["/Users/Ksquare/Documents/Software/home/node_modules/framer-motion/dist/es/render/VisualElement.mjs"],"sourcesContent":["import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}