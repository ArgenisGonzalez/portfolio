{"ast":null,"code":"\"use client\";\n\nimport _createForOfIteratorHelper from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\nvar PresenceChild = function PresenceChild(_ref) {\n  var children = _ref.children,\n    initial = _ref.initial,\n    isPresent = _ref.isPresent,\n    _onExitComplete = _ref.onExitComplete,\n    custom = _ref.custom,\n    presenceAffectsLayout = _ref.presenceAffectsLayout,\n    mode = _ref.mode;\n  var presenceChildren = useConstant(newChildrenMap);\n  var id = useId();\n  var context = useMemo(function () {\n    return {\n      id: id,\n      initial: initial,\n      isPresent: isPresent,\n      custom: custom,\n      onExitComplete: function onExitComplete(childId) {\n        presenceChildren.set(childId, true);\n        var _iterator = _createForOfIteratorHelper(presenceChildren.values()),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var isComplete = _step.value;\n            if (!isComplete) return; // can stop searching when any is incomplete\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        _onExitComplete && _onExitComplete();\n      },\n      register: function register(childId) {\n        presenceChildren.set(childId, false);\n        return function () {\n          return presenceChildren.delete(childId);\n        };\n      }\n    };\n  },\n  /**\n   * If the presence of a child affects the layout of the components around it,\n   * we want to make a new context value to ensure they get re-rendered\n   * so they can detect that layout change.\n   */\n  presenceAffectsLayout ? [Math.random()] : [isPresent]);\n  useMemo(function () {\n    presenceChildren.forEach(function (_, key) {\n      return presenceChildren.set(key, false);\n    });\n  }, [isPresent]);\n  /**\n   * If there's no `motion` components to fire exit animations, we want to remove this\n   * component immediately.\n   */\n  React.useEffect(function () {\n    !isPresent && !presenceChildren.size && _onExitComplete && _onExitComplete();\n  }, [isPresent]);\n  if (mode === \"popLayout\") {\n    children = jsx(PopChild, {\n      isPresent: isPresent,\n      children: children\n    });\n  }\n  return jsx(PresenceContext.Provider, {\n    value: context,\n    children: children\n  });\n};\nfunction newChildrenMap() {\n  return new Map();\n}\nexport { PresenceChild };","map":{"version":3,"names":["_createForOfIteratorHelper","jsx","React","useId","useMemo","PresenceContext","useConstant","PopChild","PresenceChild","_ref","children","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","id","context","childId","set","_iterator","values","_step","s","n","done","isComplete","value","err","e","f","register","delete","Math","random","forEach","_","key","useEffect","size","Provider","Map"],"sources":["/Users/Ksquare/Documents/Software/home/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}