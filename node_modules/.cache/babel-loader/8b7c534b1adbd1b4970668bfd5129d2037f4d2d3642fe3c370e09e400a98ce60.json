{"ast":null,"code":"import _classCallCheck from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\nfunction addHoverEvent(node, isActive) {\n  var eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n  var callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n  var handleEvent = function handleEvent(event, info) {\n    if (event.pointerType === \"touch\" || isDragActive()) return;\n    var props = node.getProps();\n    if (node.animationState && props.whileHover) {\n      node.animationState.setActive(\"whileHover\", isActive);\n    }\n    var callback = props[callbackName];\n    if (callback) {\n      frame.postRender(function () {\n        return callback(event, info);\n      });\n    }\n  };\n  return addPointerEvent(node.current, eventName, handleEvent, {\n    passive: !node.getProps()[callbackName]\n  });\n}\nvar HoverGesture = /*#__PURE__*/function (_Feature) {\n  _inherits(HoverGesture, _Feature);\n  var _super = _createSuper(HoverGesture);\n  function HoverGesture() {\n    _classCallCheck(this, HoverGesture);\n    return _super.apply(this, arguments);\n  }\n  _createClass(HoverGesture, [{\n    key: \"mount\",\n    value: function mount() {\n      this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {}\n  }]);\n  return HoverGesture;\n}(Feature);\nexport { HoverGesture };","map":{"version":3,"names":["addPointerEvent","pipe","isDragActive","Feature","frame","addHoverEvent","node","isActive","eventName","callbackName","handleEvent","event","info","pointerType","props","getProps","animationState","whileHover","setActive","callback","postRender","current","passive","HoverGesture","_Feature","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","mount","unmount"],"sources":["/Users/Ksquare/Documents/Software/home/node_modules/framer-motion/dist/es/gestures/hover.mjs"],"sourcesContent":["import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n"],"mappings":";;;;AAAA,SAASA,eAAe,QAAQ,iCAAiC;AACjE,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,OAAO,QAAQ,gCAAgC;AACxD,SAASC,KAAK,QAAQ,wBAAwB;AAE9C,SAASC,aAAaA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACnC,IAAMC,SAAS,GAAGD,QAAQ,GAAG,cAAc,GAAG,cAAc;EAC5D,IAAME,YAAY,GAAGF,QAAQ,GAAG,cAAc,GAAG,YAAY;EAC7D,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAEC,IAAI,EAAK;IACjC,IAAID,KAAK,CAACE,WAAW,KAAK,OAAO,IAAIX,YAAY,CAAC,CAAC,EAC/C;IACJ,IAAMY,KAAK,GAAGR,IAAI,CAACS,QAAQ,CAAC,CAAC;IAC7B,IAAIT,IAAI,CAACU,cAAc,IAAIF,KAAK,CAACG,UAAU,EAAE;MACzCX,IAAI,CAACU,cAAc,CAACE,SAAS,CAAC,YAAY,EAAEX,QAAQ,CAAC;IACzD;IACA,IAAMY,QAAQ,GAAGL,KAAK,CAACL,YAAY,CAAC;IACpC,IAAIU,QAAQ,EAAE;MACVf,KAAK,CAACgB,UAAU,CAAC;QAAA,OAAMD,QAAQ,CAACR,KAAK,EAAEC,IAAI,CAAC;MAAA,EAAC;IACjD;EACJ,CAAC;EACD,OAAOZ,eAAe,CAACM,IAAI,CAACe,OAAO,EAAEb,SAAS,EAAEE,WAAW,EAAE;IACzDY,OAAO,EAAE,CAAChB,IAAI,CAACS,QAAQ,CAAC,CAAC,CAACN,YAAY;EAC1C,CAAC,CAAC;AACN;AAAC,IACKc,YAAY,0BAAAC,QAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,QAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EAAA,SAAAA,aAAA;IAAAK,eAAA,OAAAL,YAAA;IAAA,OAAAG,MAAA,CAAAG,KAAA,OAAAC,SAAA;EAAA;EAAAC,YAAA,CAAAR,YAAA;IAAAS,GAAA;IAAAC,KAAA,EACd,SAAAC,MAAA,EAAQ;MACJ,IAAI,CAACC,OAAO,GAAGlC,IAAI,CAACI,aAAa,CAAC,IAAI,CAACC,IAAI,EAAE,IAAI,CAAC,EAAED,aAAa,CAAC,IAAI,CAACC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxF;EAAC;IAAA0B,GAAA;IAAAC,KAAA,EACD,SAAAE,QAAA,EAAU,CAAE;EAAC;EAAA,OAAAZ,YAAA;AAAA,EAJUpB,OAAO;AAOlC,SAASoB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}