{"ast":null,"code":"\"use client\";\n\nimport _classCallCheck from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nvar PopChildMeasure = /*#__PURE__*/function (_React$Component) {\n  _inherits(PopChildMeasure, _React$Component);\n  var _super = _createSuper(PopChildMeasure);\n  function PopChildMeasure() {\n    _classCallCheck(this, PopChildMeasure);\n    return _super.apply(this, arguments);\n  }\n  _createClass(PopChildMeasure, [{\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate(prevProps) {\n      var element = this.props.childRef.current;\n      if (element && prevProps.isPresent && !this.props.isPresent) {\n        var size = this.props.sizeRef.current;\n        size.height = element.offsetHeight || 0;\n        size.width = element.offsetWidth || 0;\n        size.top = element.offsetTop;\n        size.left = element.offsetLeft;\n      }\n      return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return PopChildMeasure;\n}(React.Component);\nfunction PopChild(_ref) {\n  var children = _ref.children,\n    isPresent = _ref.isPresent;\n  var id = useId();\n  var ref = useRef(null);\n  var size = useRef({\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0\n  });\n  var _useContext = useContext(MotionConfigContext),\n    nonce = _useContext.nonce;\n  /**\n   * We create and inject a style block so we can apply this explicit\n   * sizing in a non-destructive manner by just deleting the style block.\n   *\n   * We can't apply size via render as the measurement happens\n   * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n   * styles directly on the DOM node, we might be overwriting\n   * styles set via the style prop.\n   */\n  useInsertionEffect(function () {\n    var _size$current = size.current,\n      width = _size$current.width,\n      height = _size$current.height,\n      top = _size$current.top,\n      left = _size$current.left;\n    if (isPresent || !ref.current || !width || !height) return;\n    ref.current.dataset.motionPopId = id;\n    var style = document.createElement(\"style\");\n    if (nonce) style.nonce = nonce;\n    document.head.appendChild(style);\n    if (style.sheet) {\n      style.sheet.insertRule(\"\\n          [data-motion-pop-id=\\\"\".concat(id, \"\\\"] {\\n            position: absolute !important;\\n            width: \").concat(width, \"px !important;\\n            height: \").concat(height, \"px !important;\\n            top: \").concat(top, \"px !important;\\n            left: \").concat(left, \"px !important;\\n          }\\n        \"));\n    }\n    return function () {\n      document.head.removeChild(style);\n    };\n  }, [isPresent]);\n  return jsx(PopChildMeasure, {\n    isPresent: isPresent,\n    childRef: ref,\n    sizeRef: size,\n    children: React.cloneElement(children, {\n      ref: ref\n    })\n  });\n}\nexport { PopChild };","map":{"version":3,"names":["_classCallCheck","_createClass","_inherits","_createSuper","jsx","React","useId","useRef","useContext","useInsertionEffect","MotionConfigContext","PopChildMeasure","_React$Component","_super","apply","arguments","key","value","getSnapshotBeforeUpdate","prevProps","element","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","Component","PopChild","_ref","id","ref","_useContext","nonce","_size$current","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","cloneElement"],"sources":["/Users/Ksquare/Documents/Software/home/node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}