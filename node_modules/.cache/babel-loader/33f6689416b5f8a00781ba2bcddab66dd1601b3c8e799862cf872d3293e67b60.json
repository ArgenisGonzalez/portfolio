{"ast":null,"code":"import _objectSpread from \"/Users/Ksquare/Documents/Software/home/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { isString } from '../utils.mjs';\nvar createUnitType = function createUnitType(unit) {\n  return {\n    test: function test(v) {\n      return isString(v) && v.endsWith(unit) && v.split(\" \").length === 1;\n    },\n    parse: parseFloat,\n    transform: function transform(v) {\n      return \"\".concat(v).concat(unit);\n    }\n  };\n};\nvar degrees = /*@__PURE__*/createUnitType(\"deg\");\nvar percent = /*@__PURE__*/createUnitType(\"%\");\nvar px = /*@__PURE__*/createUnitType(\"px\");\nvar vh = /*@__PURE__*/createUnitType(\"vh\");\nvar vw = /*@__PURE__*/createUnitType(\"vw\");\nvar progressPercentage = _objectSpread(_objectSpread({}, percent), {}, {\n  parse: function parse(v) {\n    return percent.parse(v) / 100;\n  },\n  transform: function transform(v) {\n    return percent.transform(v * 100);\n  }\n});\nexport { degrees, percent, progressPercentage, px, vh, vw };","map":{"version":3,"names":["isString","createUnitType","unit","test","v","endsWith","split","length","parse","parseFloat","transform","concat","degrees","percent","px","vh","vw","progressPercentage","_objectSpread"],"sources":["/Users/Ksquare/Documents/Software/home/node_modules/framer-motion/dist/es/value/types/numbers/units.mjs"],"sourcesContent":["import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,cAAc;AAEvC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,IAAI;EAAA,OAAM;IAC9BC,IAAI,EAAE,SAAAA,KAACC,CAAC;MAAA,OAAKJ,QAAQ,CAACI,CAAC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAACH,IAAI,CAAC,IAAIE,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,KAAK,CAAC;IAAA;IACzEC,KAAK,EAAEC,UAAU;IACjBC,SAAS,EAAE,SAAAA,UAACN,CAAC;MAAA,UAAAO,MAAA,CAAQP,CAAC,EAAAO,MAAA,CAAGT,IAAI;IAAA;EACjC,CAAC;AAAA,CAAC;AACF,IAAMU,OAAO,GAAG,aAAcX,cAAc,CAAC,KAAK,CAAC;AACnD,IAAMY,OAAO,GAAG,aAAcZ,cAAc,CAAC,GAAG,CAAC;AACjD,IAAMa,EAAE,GAAG,aAAcb,cAAc,CAAC,IAAI,CAAC;AAC7C,IAAMc,EAAE,GAAG,aAAcd,cAAc,CAAC,IAAI,CAAC;AAC7C,IAAMe,EAAE,GAAG,aAAcf,cAAc,CAAC,IAAI,CAAC;AAC7C,IAAMgB,kBAAkB,GAAAC,aAAA,CAAAA,aAAA,KACjBL,OAAO;EACVL,KAAK,EAAE,SAAAA,MAACJ,CAAC;IAAA,OAAKS,OAAO,CAACL,KAAK,CAACJ,CAAC,CAAC,GAAG,GAAG;EAAA;EACpCM,SAAS,EAAE,SAAAA,UAACN,CAAC;IAAA,OAAKS,OAAO,CAACH,SAAS,CAACN,CAAC,GAAG,GAAG,CAAC;EAAA;AAAA,EAC/C;AAED,SAASQ,OAAO,EAAEC,OAAO,EAAEI,kBAAkB,EAAEH,EAAE,EAAEC,EAAE,EAAEC,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}